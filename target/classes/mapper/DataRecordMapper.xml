<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.dynamicquery.mapper.DataRecordMapper">

    <resultMap id="BaseResultMap" type="com.example.dynamicquery.entity.DataRecord">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="age" jdbcType="INTEGER" property="age"/>
        <result column="status" jdbcType="VARCHAR" property="status"/>
        <result column="score" jdbcType="DOUBLE" property="score"/>
        <result column="department" jdbcType="VARCHAR" property="department"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="salary" jdbcType="DOUBLE" property="salary"/>
        <result column="hire_date" jdbcType="TIMESTAMP" property="hireDate"/>
        <result column="created_time" jdbcType="TIMESTAMP" property="createdTime"/>
        <result column="updated_time" jdbcType="TIMESTAMP" property="updatedTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, name, age, status, score, department, email, phone, salary, hire_date, created_time, updated_time
    </sql>

    <!-- 通用条件片段 -->
    <sql id="Dynamic_Condition_Template">
        <choose>
            <when test="condition.operator.name() == 'EQ'">
                ${fieldName} = #{condition.value1}
            </when>
            <when test="condition.operator.name() == 'NE'">
                ${fieldName} != #{condition.value1}
            </when>
            <when test="condition.operator.name() == 'GT'">
                ${fieldName} > #{condition.value1}
            </when>
            <when test="condition.operator.name() == 'GTE'">
                ${fieldName} >= #{condition.value1}
            </when>
            <when test="condition.operator.name() == 'LT'">
                ${fieldName} &lt; #{condition.value1}
            </when>
            <when test="condition.operator.name() == 'LTE'">
                ${fieldName} &lt;= #{condition.value1}
            </when>
            <when test="condition.operator.name() == 'RANGE_CLOSED'">
                ${fieldName} >= #{condition.value1} AND ${fieldName} &lt;= #{condition.value2}
            </when>
            <when test="condition.operator.name() == 'RANGE_LEFT_OPEN'">
                ${fieldName} > #{condition.value1} AND ${fieldName} &lt;= #{condition.value2}
            </when>
            <when test="condition.operator.name() == 'RANGE_RIGHT_OPEN'">
                ${fieldName} >= #{condition.value1} AND ${fieldName} &lt; #{condition.value2}
            </when>
            <when test="condition.operator.name() == 'RANGE_OPEN'">
                ${fieldName} > #{condition.value1} AND ${fieldName} &lt; #{condition.value2}
            </when>
            <when test="condition.operator.name() == 'NA'">
                <choose>
                    <when test="fieldType == 'STRING'">
                        (${fieldName} IS NULL OR ${fieldName} = '')
                    </when>
                    <otherwise>
                        ${fieldName} IS NULL
                    </otherwise>
                </choose>
            </when>
        </choose>
    </sql>

    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO data_record
        (name, age, status, score, department, email, phone, salary, hire_date, created_time, updated_time)
        VALUES
        (#{name}, #{age}, #{status}, #{score}, #{department}, #{email}, #{phone}, #{salary}, 
         #{hireDate}, #{createdTime}, #{updatedTime})
    </insert>

    <update id="updateById">
        UPDATE data_record
        SET name = #{name},
            age = #{age},
            status = #{status},
            score = #{score},
            department = #{department},
            email = #{email},
            phone = #{phone},
            salary = #{salary},
            hire_date = #{hireDate},
            updated_time = #{updatedTime}
        WHERE id = #{id}
    </update>

    <delete id="deleteById">
        DELETE FROM data_record WHERE id = #{id}
    </delete>

    <select id="selectById" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM data_record
        WHERE id = #{id}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM data_record
        ORDER BY created_time DESC
    </select>

    <select id="selectByDynamicConditions" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM data_record
        <where>
            <!-- 姓名条件 -->
            <if test="conditions.name != null">
                AND (
                <foreach collection="conditions.name" item="nameCondition" separator=" OR ">
                    <choose>
                        <when test="nameCondition.operator.name() == 'EQ'">
                            name = #{nameCondition.value1}
                        </when>
                        <when test="nameCondition.operator.name() == 'NE'">
                            name != #{nameCondition.value1}
                        </when>
                        <when test="nameCondition.operator.name() == 'NA'">
                            (name IS NULL OR name = '')
                        </when>
                    </choose>
                </foreach>
                )
            </if>
            
            <!-- 年龄条件 -->
            <if test="conditions.age != null">
                AND (
                <foreach collection="conditions.age" item="ageCondition" separator=" OR ">
                    <choose>
                        <when test="ageCondition.operator.name() == 'EQ'">
                            age = #{ageCondition.value1}
                        </when>
                        <when test="ageCondition.operator.name() == 'NE'">
                            age != #{ageCondition.value1}
                        </when>
                        <when test="ageCondition.operator.name() == 'GT'">
                            age > #{ageCondition.value1}
                        </when>
                        <when test="ageCondition.operator.name() == 'GTE'">
                            age >= #{ageCondition.value1}
                        </when>
                        <when test="ageCondition.operator.name() == 'LT'">
                            age &lt; #{ageCondition.value1}
                        </when>
                        <when test="ageCondition.operator.name() == 'LTE'">
                            age &lt;= #{ageCondition.value1}
                        </when>
                        <when test="ageCondition.operator.name() == 'RANGE_CLOSED'">
                            age >= #{ageCondition.value1} AND age &lt;= #{ageCondition.value2}
                        </when>
                        <when test="ageCondition.operator.name() == 'RANGE_LEFT_OPEN'">
                            age > #{ageCondition.value1} AND age &lt;= #{ageCondition.value2}
                        </when>
                        <when test="ageCondition.operator.name() == 'RANGE_RIGHT_OPEN'">
                            age >= #{ageCondition.value1} AND age &lt; #{ageCondition.value2}
                        </when>
                        <when test="ageCondition.operator.name() == 'RANGE_OPEN'">
                            age > #{ageCondition.value1} AND age &lt; #{ageCondition.value2}
                        </when>
                        <when test="ageCondition.operator.name() == 'NA'">
                            age IS NULL
                        </when>
                    </choose>
                </foreach>
                )
            </if>
            
            <!-- 状态条件 -->
            <if test="conditions.status != null">
                AND (
                <foreach collection="conditions.status" item="statusCondition" separator=" OR ">
                    <choose>
                        <when test="statusCondition.operator.name() == 'EQ'">
                            status = #{statusCondition.value1}
                        </when>
                        <when test="statusCondition.operator.name() == 'NE'">
                            status != #{statusCondition.value1}
                        </when>
                        <when test="statusCondition.operator.name() == 'NA'">
                            (status IS NULL OR status = '')
                        </when>
                    </choose>
                </foreach>
                )
            </if>
            
            <!-- 分数条件 -->
            <if test="conditions.score != null">
                AND (
                <foreach collection="conditions.score" item="scoreCondition" separator=" OR ">
                    <choose>
                        <when test="scoreCondition.operator.name() == 'EQ'">
                            ROUND(score, 2) = #{scoreCondition.value1}
                        </when>
                        <when test="scoreCondition.operator.name() == 'NE'">
                            ROUND(score, 2) != #{scoreCondition.value1}
                        </when>
                        <when test="scoreCondition.operator.name() == 'GT'">
                            ROUND(score, 2) > #{scoreCondition.value1}
                        </when>
                        <when test="scoreCondition.operator.name() == 'GTE'">
                            ROUND(score, 2) >= #{scoreCondition.value1}
                        </when>
                        <when test="scoreCondition.operator.name() == 'LT'">
                            ROUND(score, 2) &lt; #{scoreCondition.value1}
                        </when>
                        <when test="scoreCondition.operator.name() == 'LTE'">
                            ROUND(score, 2) &lt;= #{scoreCondition.value1}
                        </when>
                        <when test="scoreCondition.operator.name() == 'RANGE_CLOSED'">
                            ROUND(score, 2) >= #{scoreCondition.value1} AND ROUND(score, 2) &lt;= #{scoreCondition.value2}
                        </when>
                        <when test="scoreCondition.operator.name() == 'RANGE_LEFT_OPEN'">
                            ROUND(score, 2) > #{scoreCondition.value1} AND ROUND(score, 2) &lt;= #{scoreCondition.value2}
                        </when>
                        <when test="scoreCondition.operator.name() == 'RANGE_RIGHT_OPEN'">
                            ROUND(score, 2) >= #{scoreCondition.value1} AND ROUND(score, 2) &lt; #{scoreCondition.value2}
                        </when>
                        <when test="scoreCondition.operator.name() == 'RANGE_OPEN'">
                            ROUND(score, 2) > #{scoreCondition.value1} AND ROUND(score, 2) &lt; #{scoreCondition.value2}
                        </when>
                        <when test="scoreCondition.operator.name() == 'NA'">
                            score IS NULL
                        </when>
                    </choose>
                </foreach>
                )
            </if>
            
            <!-- 部门条件 -->
            <if test="conditions.department != null">
                AND (
                <foreach collection="conditions.department" item="departmentCondition" separator=" OR ">
                    <choose>
                        <when test="departmentCondition.operator.name() == 'EQ'">
                            department = #{departmentCondition.value1}
                        </when>
                        <when test="departmentCondition.operator.name() == 'NE'">
                            department != #{departmentCondition.value1}
                        </when>
                        <when test="departmentCondition.operator.name() == 'NA'">
                            (department IS NULL OR department = '')
                        </when>
                    </choose>
                </foreach>
                )
            </if>
            
            <!-- 薪资条件 -->
            <if test="conditions.salary != null">
                AND (
                <foreach collection="conditions.salary" item="salaryCondition" separator=" OR ">
                    <choose>
                        <when test="salaryCondition.operator.name() == 'EQ'">
                            ROUND(salary, 2) = #{salaryCondition.value1}
                        </when>
                        <when test="salaryCondition.operator.name() == 'NE'">
                            ROUND(salary, 2) != #{salaryCondition.value1}
                        </when>
                        <when test="salaryCondition.operator.name() == 'GT'">
                            ROUND(salary, 2) > #{salaryCondition.value1}
                        </when>
                        <when test="salaryCondition.operator.name() == 'GTE'">
                            ROUND(salary, 2) >= #{salaryCondition.value1}
                        </when>
                        <when test="salaryCondition.operator.name() == 'LT'">
                            ROUND(salary, 2) &lt; #{salaryCondition.value1}
                        </when>
                        <when test="salaryCondition.operator.name() == 'LTE'">
                            ROUND(salary, 2) &lt;= #{salaryCondition.value1}
                        </when>
                        <when test="salaryCondition.operator.name() == 'RANGE_CLOSED'">
                            ROUND(salary, 2) >= #{salaryCondition.value1} AND ROUND(salary, 2) &lt;= #{salaryCondition.value2}
                        </when>
                        <when test="salaryCondition.operator.name() == 'RANGE_LEFT_OPEN'">
                            ROUND(salary, 2) > #{salaryCondition.value1} AND ROUND(salary, 2) &lt;= #{salaryCondition.value2}
                        </when>
                        <when test="salaryCondition.operator.name() == 'RANGE_RIGHT_OPEN'">
                            ROUND(salary, 2) >= #{salaryCondition.value1} AND ROUND(salary, 2) &lt; #{salaryCondition.value2}
                        </when>
                        <when test="salaryCondition.operator.name() == 'RANGE_OPEN'">
                            ROUND(salary, 2) > #{salaryCondition.value1} AND ROUND(salary, 2) &lt; #{salaryCondition.value2}
                        </when>
                        <when test="salaryCondition.operator.name() == 'NA'">
                            salary IS NULL
                        </when>
                    </choose>
                </foreach>
                )
            </if>
            
            <!-- 邮箱条件 -->
            <if test="conditions.email != null">
                AND (
                <foreach collection="conditions.email" item="emailCondition" separator=" OR ">
                    <choose>
                        <when test="emailCondition.operator.name() == 'EQ'">
                            email = #{emailCondition.value1}
                        </when>
                        <when test="emailCondition.operator.name() == 'NE'">
                            email != #{emailCondition.value1}
                        </when>
                        <when test="emailCondition.operator.name() == 'NA'">
                            (email IS NULL OR email = '')
                        </when>
                    </choose>
                </foreach>
                )
            </if>
            
            <!-- 手机条件 -->
            <if test="conditions.phone != null">
                AND (
                <foreach collection="conditions.phone" item="phoneCondition" separator=" OR ">
                    <choose>
                        <when test="phoneCondition.operator.name() == 'EQ'">
                            phone = #{phoneCondition.value1}
                        </when>
                        <when test="phoneCondition.operator.name() == 'NE'">
                            phone != #{phoneCondition.value1}
                        </when>
                        <when test="phoneCondition.operator.name() == 'NA'">
                            (phone IS NULL OR phone = '')
                        </when>
                    </choose>
                </foreach>
                )
            </if>
        </where>
        ORDER BY created_time DESC
    </select>

    <select id="countByDynamicConditions" resultType="int">
        SELECT COUNT(*)
        FROM data_record
        <where>
            <!-- 这里可以重用上面的条件，为了简洁只列出主要字段 -->
            <if test="conditions.name != null">
                AND (
                <foreach collection="conditions.name" item="nameCondition" separator=" OR ">
                    <choose>
                        <when test="nameCondition.operator.name() == 'EQ'">
                            name = #{nameCondition.value1}
                        </when>
                        <when test="nameCondition.operator.name() == 'NE'">
                            name != #{nameCondition.value1}
                        </when>
                        <when test="nameCondition.operator.name() == 'NA'">
                            (name IS NULL OR name = '')
                        </when>
                    </choose>
                </foreach>
                )
            </if>
            
            <if test="conditions.age != null">
                AND (
                <foreach collection="conditions.age" item="ageCondition" separator=" OR ">
                    <choose>
                        <when test="ageCondition.operator.name() == 'EQ'">
                            age = #{ageCondition.value1}
                        </when>
                        <when test="ageCondition.operator.name() == 'NE'">
                            age != #{ageCondition.value1}
                        </when>
                        <when test="ageCondition.operator.name() == 'GT'">
                            age > #{ageCondition.value1}
                        </when>
                        <when test="ageCondition.operator.name() == 'GTE'">
                            age >= #{ageCondition.value1}
                        </when>
                        <when test="ageCondition.operator.name() == 'LT'">
                            age &lt; #{ageCondition.value1}
                        </when>
                        <when test="ageCondition.operator.name() == 'LTE'">
                            age &lt;= #{ageCondition.value1}
                        </when>
                        <when test="ageCondition.operator.name() == 'RANGE_CLOSED'">
                            age >= #{ageCondition.value1} AND age &lt;= #{ageCondition.value2}
                        </when>
                        <when test="ageCondition.operator.name() == 'RANGE_LEFT_OPEN'">
                            age > #{ageCondition.value1} AND age &lt;= #{ageCondition.value2}
                        </when>
                        <when test="ageCondition.operator.name() == 'RANGE_RIGHT_OPEN'">
                            age >= #{ageCondition.value1} AND age &lt; #{ageCondition.value2}
                        </when>
                        <when test="ageCondition.operator.name() == 'RANGE_OPEN'">
                            age > #{ageCondition.value1} AND age &lt; #{ageCondition.value2}
                        </when>
                        <when test="ageCondition.operator.name() == 'NA'">
                            age IS NULL
                        </when>
                    </choose>
                </foreach>
                )
            </if>
        </where>
    </select>

</mapper>